#List: A data type which contain multiple value in ordered sequence --> mutable datatype

#list =[5, 7, 9, 11, 13]

#list(); A list function
print(list("Hurry"))    #['H', 'u', 'r', 'r', 'y']

# in and not in operator : Check the list
list_1 =["Apple", "Banana", "Orange", "Mango"]
print("Mango" in list_1) #True
print("Papaya" in list_1) #False
print("Mango" not in list_1) #True

#Exercise
mixed = [10, 4.97, True, "mountain", [9, 8, 7]]
li_str = list("cheese")
print("e" in li_str)     #True
print("a" not in li_str) #True

#Indexes and list slicing
#Accessing by index
list_2 = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
print(list_2[1])  # 10
print(list_2[7])  # 70

#list of list by indexing we can access item
list_2 = [[0, 10, 20], [30, 40, 50], [60, 70, 80], [90, 100, 110]]
print(list_2[2][1]) # 70

#Negative indexes
Negative_list = [1, 2, 3, 4, 5, 6, 7, 8, 9]
print(Negative_list[-1]) #9
print(Negative_list[-3]) #7

mixed_list =["Girl", 1 , 15, "hair", 20]
print(mixed_list[1] + 50) #51
print("The\""+mixed_list[0] + mixed_list[-2]+"\"is curly") #The"Girlhair"is curly

#List slicing
sliced = [1, 2,3,4,5,6,7,8,9]
print(sliced[:4])  #[1, 2, 3,4]
print(sliced[3:8]) #[4, 5, 6, 7, 8]

# reassign the item in the List : We can also ad new index
reassign_list = [0,1,2,3,4,5,6,7,8,9]
print(reassign_list)                        #[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
reassign_list[1:4] = [10 , 20 ,30]
print(reassign_list)                        #[0, 10, 20, 30, 4, 5, 6, 7, 8, 9]

#Excercise
up_by_two = [[0, 2], [4, 6], [8, 10], [12, 14]]
print(up_by_two[0])                         #[0, 2]
print(up_by_two[3][1])                      #14
furniture = ["chair", "table", "desk", "lamp", "bed"]
print(furniture[-5])                        #chair
print("Most people own at least " + str(up_by_two[0][1]) + " " + furniture[0] + "s.") #Most people own at least 2 chairs.
floats = [0.98, 8.76, 6.54, 4.32]
print(floats[1:])                           #[8.76, 6.54, 4.32]
print(floats[1:3])                          #[8.76, 6.54]
print(floats[:2])                           #[0.98, 8.76]


#del: Statement allow you to delete value from the list
list_2 = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]
del list_2[1]
print(list_2) #[0, 20, 30, 40, 50, 60, 70, 80, 90]

# .remove(): allows you to remove
list_3 =["Mars", "Jean", "Aaron", "Michael"]
list_3.remove("Jean")
print(list_3)  #['Mars', 'Aaron', 'Michael']

# .append(): can add item into the list at the end
list_3.append("More")
print(list_3)  #['Mars', 'Aaron', 'Michael', 'More']

# .insert(): can add item anywhere in the list
list_3.insert(1,"Sam")
print(list_3)  #['Mars', 'Sam', 'Aaron', 'Michael', 'More']

# .sort(): it sorts low to high & arrange strings in alphabetical order & cannot use mixed datatype
list_4=[23, 11, 45, 7, 89, 57, 83, 2, 9]
list_4.sort()
print(list_4)  #[2, 7, 9, 11, 23, 45, 57, 83, 89]
list_4.sort(reverse=True)
print(list_4)  #[89, 83, 57, 45, 23, 11, 9, 7, 2]

# .index(): can give index number of an item
list_5 = ["Cow","Goat","Dog","Cat" ]
print(list_5.index("Dog")) #2

# .pop(): show the removed item
animal = ["Cow","Goat","Dog","Cat", "Turtle" ]
end = animal.pop() #also we can pass index number of item which we want to pop
print(animal) #['Cow', 'Goat', 'Dog', 'Cat']
print(end)   #Turtle

#Excercise
arctic_animals = ["penguin", "elephant", "polar bear", "walrus", "tiger", "reindeer"]
del arctic_animals[4]
arctic_animals.remove("elephant")
arctic_animals.append("arctic fox")
arctic_animals.insert(2, "snowy owl")
arctic_animals.sort()
print(arctic_animals) #['arctic fox', 'penguin', 'polar bear', 'reindeer', 'snowy owl', 'walrus']
print(arctic_animals.index("reindeer")) #3
print(arctic_animals.pop()) #walrus






